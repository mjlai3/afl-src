"use strict";angular.module("app",["app.services","app.controllers","app.directives"]),angular.module("app.services",[]),angular.module("app.controllers",[]),angular.module("app.directives",[]),angular.module("app.controllers").controller("PlayersController",["$scope","server","calculator","$q",function(e,t,a,r){e.players=[];var o=t.get("./data/players.json");r.all([o]).then(function(t){var r=t[0].data.players;r.forEach(function(e){e.calculations=a.getCalculations(e.games)}),e.players=r,console.log(e.players)}).catch(function(e){console.log("Error: "+e)}),e.getTeamClass=function(e){return"team--"+e.toLowerCase().replace(" ","-")}}]),angular.module("app.services").factory("calculator",["$http",function(e){return{getSum:function(e){var t=0;return e.forEach(function(e){t+=e}),t%1!=0?parseFloat(t.toFixed(2)):t},getAverage:function(e){return this.getSum(e)/e.length},getMax:function(e){return e.reduce(function(e,t){return Math.max(e,t)})},getCalculations:function(e){var t={};for(var a in e.forEach(function(e){for(var a in e)"round"!==a&&(t.hasOwnProperty(a)?t[a].record.push(e[a]):t[a]={record:[e[a]]})}),t){var r=t[a].record;t[a].average=this.getAverage(r),t[a].total=this.getSum(r),t[a].best=this.getMax(r),"score"!==a?(t[a].average=Math.round(t[a].average),t[a].total=Math.round(t[a].total),t[a].best=Math.round(t[a].best)):(t[a].average=parseFloat(t[a].average.toFixed(2)),t[a].total=parseFloat(t[a].total.toFixed(2)),t[a].best=parseFloat(t[a].best.toFixed(2)))}return t}}}]),angular.module("app.services").factory("server",["$http",function(e){return{get:function(t){return e({method:"GET",url:t,headers:{"Content-Type":"application/json"}})}}}]),angular.module("app.directives").directive("statBox",function(){return{restrict:"E",scope:{heading:"@",stats:"=",statType:"@",class:"@"},replace:!0,templateUrl:"./views/statBox.html"}});